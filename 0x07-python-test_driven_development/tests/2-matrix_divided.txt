The ``matrix_divided`` module
===============================================================================
Using ``matrix_divided``
-------------------------------------------------------------------------------

Import matrix_divided from 2-matrix_divided

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test1: simple division
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test2: division by 0
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

Test3: div not int/float type
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "holberton")
Traceback (most recent call last):
TypeError: div must be a number

Test5: missing div arg
>>> matrix_divided([[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Test6: div of type float
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3.58)
[[0.28, 0.56, 0.84], [1.12, 1.4, 1.68]]

Test7: matrix of int/string types
>>> matrix_divided([[1, 2, "Rym"], [4, "Holbie", 6]], 3)
Traceback (most recent call last):
TypeError: unsupported operand type(s) for /: 'str' and 'int'

Test8: matrix divided by div = float('inf')
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
